The ``BaseGeometry`` module
===========================

Using ``BaseGeometry``
----------------------

import the BaseGeometry class.
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bageo = BaseGeometry()
>>> bageo.integer_validator("int", 7)

>>> bageo.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bageo.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bageo.integer_validator("width", -50)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bageo.integer_validator("width", "Yisus")
Traceback (most recent call last):
TypeError: width must be an integer

>>> bageo.area("Yisus")
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given

>>> bageo.integer_validator("size", 15, 3)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bageo.integer_validator("size", -2.05)
Traceback (most recent call last):
TypeError: size must be an integer

>>> bageo = BaseGeometry("size")
Traceback (most recent call last):
TypeError: object() takes no parameters

>>> bageo.integer_validator("size", None)
Traceback (most recent call last):
TypeError: size must be an integer

>>> bageo.integer_validator("size", NaN)
Traceback (most recent call last):
NameError: name 'NaN' is not defined
