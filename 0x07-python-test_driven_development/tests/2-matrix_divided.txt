The ``matrix_divided`` module
=============================

Using ``matrix_divided``
------------------------

import the matrix_divided module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

passing int as first arg
>>> matrix_divided(3, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

passing string as second arg
>>> matrix_divided([[6, 3], [4, 8]], "div")
Traceback (most recent call last):
TypeError: div must be a number

passing a list of integers as arg
>>> matrix_divided([1, 2, 3, 4, 5], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

passing a diferent size lists on matrix
>>> matrix_divided([[6, 3], [5, 3, 2], [2]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

no div argument
>>> matrix_divided([[3], [5]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

no arguments
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

division by zero
>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
